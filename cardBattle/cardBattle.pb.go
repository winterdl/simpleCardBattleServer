// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cardBattle.proto

package cardBattle

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Player struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Level                int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Cash                 int64    `protobuf:"varint,5,opt,name=cash,proto3" json:"cash,omitempty"`
	Exp                  int64    `protobuf:"varint,6,opt,name=exp,proto3" json:"exp,omitempty"`
	MaxExp               int64    `protobuf:"varint,7,opt,name=maxExp,proto3" json:"maxExp,omitempty"`
	MaxReserveSlot       int32    `protobuf:"varint,8,opt,name=maxReserveSlot,proto3" json:"maxReserveSlot,omitempty"`
	MaxDeckSlot          int32    `protobuf:"varint,9,opt,name=maxDeckSlot,proto3" json:"maxDeckSlot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{0}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Player) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Player) GetCash() int64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

func (m *Player) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Player) GetMaxExp() int64 {
	if m != nil {
		return m.MaxExp
	}
	return 0
}

func (m *Player) GetMaxReserveSlot() int32 {
	if m != nil {
		return m.MaxReserveSlot
	}
	return 0
}

func (m *Player) GetMaxDeckSlot() int32 {
	if m != nil {
		return m.MaxDeckSlot
	}
	return 0
}

type AllPlayer struct {
	Players              []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AllPlayer) Reset()         { *m = AllPlayer{} }
func (m *AllPlayer) String() string { return proto.CompactTextString(m) }
func (*AllPlayer) ProtoMessage()    {}
func (*AllPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{1}
}

func (m *AllPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPlayer.Unmarshal(m, b)
}
func (m *AllPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPlayer.Marshal(b, m, deterministic)
}
func (m *AllPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPlayer.Merge(m, src)
}
func (m *AllPlayer) XXX_Size() int {
	return xxx_messageInfo_AllPlayer.Size(m)
}
func (m *AllPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_AllPlayer proto.InternalMessageInfo

func (m *AllPlayer) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type Card struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Price                int64    `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Level                int32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Atk                  int64    `protobuf:"varint,5,opt,name=atk,proto3" json:"atk,omitempty"`
	Def                  int64    `protobuf:"varint,6,opt,name=def,proto3" json:"def,omitempty"`
	Color                int32    `protobuf:"varint,7,opt,name=color,proto3" json:"color,omitempty"`
	Name                 string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{2}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Card) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Card) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Card) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Card) GetAtk() int64 {
	if m != nil {
		return m.Atk
	}
	return 0
}

func (m *Card) GetDef() int64 {
	if m != nil {
		return m.Def
	}
	return 0
}

func (m *Card) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AllCard struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllCard) Reset()         { *m = AllCard{} }
func (m *AllCard) String() string { return proto.CompactTextString(m) }
func (*AllCard) ProtoMessage()    {}
func (*AllCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{3}
}

func (m *AllCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllCard.Unmarshal(m, b)
}
func (m *AllCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllCard.Marshal(b, m, deterministic)
}
func (m *AllCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllCard.Merge(m, src)
}
func (m *AllCard) XXX_Size() int {
	return xxx_messageInfo_AllCard.Size(m)
}
func (m *AllCard) XXX_DiscardUnknown() {
	xxx_messageInfo_AllCard.DiscardUnknown(m)
}

var xxx_messageInfo_AllCard proto.InternalMessageInfo

func (m *AllCard) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type PlayerAndCard struct {
	Client               *Player  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	CardData             *Card    `protobuf:"bytes,2,opt,name=cardData,proto3" json:"cardData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerAndCard) Reset()         { *m = PlayerAndCard{} }
func (m *PlayerAndCard) String() string { return proto.CompactTextString(m) }
func (*PlayerAndCard) ProtoMessage()    {}
func (*PlayerAndCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{4}
}

func (m *PlayerAndCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerAndCard.Unmarshal(m, b)
}
func (m *PlayerAndCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerAndCard.Marshal(b, m, deterministic)
}
func (m *PlayerAndCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerAndCard.Merge(m, src)
}
func (m *PlayerAndCard) XXX_Size() int {
	return xxx_messageInfo_PlayerAndCard.Size(m)
}
func (m *PlayerAndCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerAndCard.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerAndCard proto.InternalMessageInfo

func (m *PlayerAndCard) GetClient() *Player {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *PlayerAndCard) GetCardData() *Card {
	if m != nil {
		return m.CardData
	}
	return nil
}

type PlayerAndSlot struct {
	Owner *Player `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	// type slotType
	// 1 = slot for deck
	// 2 = slot for reserve
	SlotType             int32    `protobuf:"varint,2,opt,name=slotType,proto3" json:"slotType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerAndSlot) Reset()         { *m = PlayerAndSlot{} }
func (m *PlayerAndSlot) String() string { return proto.CompactTextString(m) }
func (*PlayerAndSlot) ProtoMessage()    {}
func (*PlayerAndSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{5}
}

func (m *PlayerAndSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerAndSlot.Unmarshal(m, b)
}
func (m *PlayerAndSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerAndSlot.Marshal(b, m, deterministic)
}
func (m *PlayerAndSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerAndSlot.Merge(m, src)
}
func (m *PlayerAndSlot) XXX_Size() int {
	return xxx_messageInfo_PlayerAndSlot.Size(m)
}
func (m *PlayerAndSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerAndSlot.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerAndSlot proto.InternalMessageInfo

func (m *PlayerAndSlot) GetOwner() *Player {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *PlayerAndSlot) GetSlotType() int32 {
	if m != nil {
		return m.SlotType
	}
	return 0
}

type LobbyStream struct {
	// Types that are valid to be assigned to Event:
	//	*LobbyStream_PlayerJoin
	//	*LobbyStream_PlayerLeft
	//	*LobbyStream_GetAllPlayers
	//	*LobbyStream_GetOneplayer
	//	*LobbyStream_PlayerSuccessJoin
	//	*LobbyStream_PlayerSuccessLeft
	//	*LobbyStream_OnePlayerWithCards
	//	*LobbyStream_ExcMessage
	Event                isLobbyStream_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LobbyStream) Reset()         { *m = LobbyStream{} }
func (m *LobbyStream) String() string { return proto.CompactTextString(m) }
func (*LobbyStream) ProtoMessage()    {}
func (*LobbyStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{6}
}

func (m *LobbyStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LobbyStream.Unmarshal(m, b)
}
func (m *LobbyStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LobbyStream.Marshal(b, m, deterministic)
}
func (m *LobbyStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LobbyStream.Merge(m, src)
}
func (m *LobbyStream) XXX_Size() int {
	return xxx_messageInfo_LobbyStream.Size(m)
}
func (m *LobbyStream) XXX_DiscardUnknown() {
	xxx_messageInfo_LobbyStream.DiscardUnknown(m)
}

var xxx_messageInfo_LobbyStream proto.InternalMessageInfo

type isLobbyStream_Event interface {
	isLobbyStream_Event()
}

type LobbyStream_PlayerJoin struct {
	PlayerJoin *Player `protobuf:"bytes,1,opt,name=playerJoin,proto3,oneof"`
}

type LobbyStream_PlayerLeft struct {
	PlayerLeft *Player `protobuf:"bytes,2,opt,name=playerLeft,proto3,oneof"`
}

type LobbyStream_GetAllPlayers struct {
	GetAllPlayers *AllPlayer `protobuf:"bytes,3,opt,name=getAllPlayers,proto3,oneof"`
}

type LobbyStream_GetOneplayer struct {
	GetOneplayer *Player `protobuf:"bytes,4,opt,name=getOneplayer,proto3,oneof"`
}

type LobbyStream_PlayerSuccessJoin struct {
	PlayerSuccessJoin *Player `protobuf:"bytes,5,opt,name=playerSuccessJoin,proto3,oneof"`
}

type LobbyStream_PlayerSuccessLeft struct {
	PlayerSuccessLeft *Player `protobuf:"bytes,6,opt,name=playerSuccessLeft,proto3,oneof"`
}

type LobbyStream_OnePlayerWithCards struct {
	OnePlayerWithCards *PlayerWithCards `protobuf:"bytes,7,opt,name=onePlayerWithCards,proto3,oneof"`
}

type LobbyStream_ExcMessage struct {
	ExcMessage *ExceptionErrorMessage `protobuf:"bytes,8,opt,name=excMessage,proto3,oneof"`
}

func (*LobbyStream_PlayerJoin) isLobbyStream_Event() {}

func (*LobbyStream_PlayerLeft) isLobbyStream_Event() {}

func (*LobbyStream_GetAllPlayers) isLobbyStream_Event() {}

func (*LobbyStream_GetOneplayer) isLobbyStream_Event() {}

func (*LobbyStream_PlayerSuccessJoin) isLobbyStream_Event() {}

func (*LobbyStream_PlayerSuccessLeft) isLobbyStream_Event() {}

func (*LobbyStream_OnePlayerWithCards) isLobbyStream_Event() {}

func (*LobbyStream_ExcMessage) isLobbyStream_Event() {}

func (m *LobbyStream) GetEvent() isLobbyStream_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *LobbyStream) GetPlayerJoin() *Player {
	if x, ok := m.GetEvent().(*LobbyStream_PlayerJoin); ok {
		return x.PlayerJoin
	}
	return nil
}

func (m *LobbyStream) GetPlayerLeft() *Player {
	if x, ok := m.GetEvent().(*LobbyStream_PlayerLeft); ok {
		return x.PlayerLeft
	}
	return nil
}

func (m *LobbyStream) GetGetAllPlayers() *AllPlayer {
	if x, ok := m.GetEvent().(*LobbyStream_GetAllPlayers); ok {
		return x.GetAllPlayers
	}
	return nil
}

func (m *LobbyStream) GetGetOneplayer() *Player {
	if x, ok := m.GetEvent().(*LobbyStream_GetOneplayer); ok {
		return x.GetOneplayer
	}
	return nil
}

func (m *LobbyStream) GetPlayerSuccessJoin() *Player {
	if x, ok := m.GetEvent().(*LobbyStream_PlayerSuccessJoin); ok {
		return x.PlayerSuccessJoin
	}
	return nil
}

func (m *LobbyStream) GetPlayerSuccessLeft() *Player {
	if x, ok := m.GetEvent().(*LobbyStream_PlayerSuccessLeft); ok {
		return x.PlayerSuccessLeft
	}
	return nil
}

func (m *LobbyStream) GetOnePlayerWithCards() *PlayerWithCards {
	if x, ok := m.GetEvent().(*LobbyStream_OnePlayerWithCards); ok {
		return x.OnePlayerWithCards
	}
	return nil
}

func (m *LobbyStream) GetExcMessage() *ExceptionErrorMessage {
	if x, ok := m.GetEvent().(*LobbyStream_ExcMessage); ok {
		return x.ExcMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LobbyStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LobbyStream_PlayerJoin)(nil),
		(*LobbyStream_PlayerLeft)(nil),
		(*LobbyStream_GetAllPlayers)(nil),
		(*LobbyStream_GetOneplayer)(nil),
		(*LobbyStream_PlayerSuccessJoin)(nil),
		(*LobbyStream_PlayerSuccessLeft)(nil),
		(*LobbyStream_OnePlayerWithCards)(nil),
		(*LobbyStream_ExcMessage)(nil),
	}
}

type ProfileStream struct {
	// Types that are valid to be assigned to Event:
	//	*ProfileStream_OnePlayerWithCards
	//	*ProfileStream_AddCardToDeck
	//	*ProfileStream_RemoveCardFromDeck
	//	*ProfileStream_ExcMessage
	Event                isProfileStream_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ProfileStream) Reset()         { *m = ProfileStream{} }
func (m *ProfileStream) String() string { return proto.CompactTextString(m) }
func (*ProfileStream) ProtoMessage()    {}
func (*ProfileStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{7}
}

func (m *ProfileStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileStream.Unmarshal(m, b)
}
func (m *ProfileStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileStream.Marshal(b, m, deterministic)
}
func (m *ProfileStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileStream.Merge(m, src)
}
func (m *ProfileStream) XXX_Size() int {
	return xxx_messageInfo_ProfileStream.Size(m)
}
func (m *ProfileStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileStream.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileStream proto.InternalMessageInfo

type isProfileStream_Event interface {
	isProfileStream_Event()
}

type ProfileStream_OnePlayerWithCards struct {
	OnePlayerWithCards *PlayerWithCards `protobuf:"bytes,1,opt,name=onePlayerWithCards,proto3,oneof"`
}

type ProfileStream_AddCardToDeck struct {
	AddCardToDeck *PlayerAndCard `protobuf:"bytes,2,opt,name=addCardToDeck,proto3,oneof"`
}

type ProfileStream_RemoveCardFromDeck struct {
	RemoveCardFromDeck *PlayerAndCard `protobuf:"bytes,3,opt,name=removeCardFromDeck,proto3,oneof"`
}

type ProfileStream_ExcMessage struct {
	ExcMessage *ExceptionErrorMessage `protobuf:"bytes,4,opt,name=excMessage,proto3,oneof"`
}

func (*ProfileStream_OnePlayerWithCards) isProfileStream_Event() {}

func (*ProfileStream_AddCardToDeck) isProfileStream_Event() {}

func (*ProfileStream_RemoveCardFromDeck) isProfileStream_Event() {}

func (*ProfileStream_ExcMessage) isProfileStream_Event() {}

func (m *ProfileStream) GetEvent() isProfileStream_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ProfileStream) GetOnePlayerWithCards() *PlayerWithCards {
	if x, ok := m.GetEvent().(*ProfileStream_OnePlayerWithCards); ok {
		return x.OnePlayerWithCards
	}
	return nil
}

func (m *ProfileStream) GetAddCardToDeck() *PlayerAndCard {
	if x, ok := m.GetEvent().(*ProfileStream_AddCardToDeck); ok {
		return x.AddCardToDeck
	}
	return nil
}

func (m *ProfileStream) GetRemoveCardFromDeck() *PlayerAndCard {
	if x, ok := m.GetEvent().(*ProfileStream_RemoveCardFromDeck); ok {
		return x.RemoveCardFromDeck
	}
	return nil
}

func (m *ProfileStream) GetExcMessage() *ExceptionErrorMessage {
	if x, ok := m.GetEvent().(*ProfileStream_ExcMessage); ok {
		return x.ExcMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ProfileStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ProfileStream_OnePlayerWithCards)(nil),
		(*ProfileStream_AddCardToDeck)(nil),
		(*ProfileStream_RemoveCardFromDeck)(nil),
		(*ProfileStream_ExcMessage)(nil),
	}
}

type ShopStream struct {
	// Types that are valid to be assigned to Event:
	//	*ShopStream_PlayerJoin
	//	*ShopStream_ShopRefreshTime
	//	*ShopStream_ShopRefresh
	//	*ShopStream_OnePlayerWithCards
	//	*ShopStream_AllCardInShopping
	//	*ShopStream_OnBuyCard
	//	*ShopStream_OnCardBought
	//	*ShopStream_OnSellCard
	//	*ShopStream_OnCardSold
	//	*ShopStream_OnUpgradeCard
	//	*ShopStream_OnCardUpgraded
	//	*ShopStream_OnCardDeckSlot
	//	*ShopStream_OnSuccessAddSlot
	//	*ShopStream_ExcMessage
	Event                isShopStream_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ShopStream) Reset()         { *m = ShopStream{} }
func (m *ShopStream) String() string { return proto.CompactTextString(m) }
func (*ShopStream) ProtoMessage()    {}
func (*ShopStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{8}
}

func (m *ShopStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopStream.Unmarshal(m, b)
}
func (m *ShopStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopStream.Marshal(b, m, deterministic)
}
func (m *ShopStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopStream.Merge(m, src)
}
func (m *ShopStream) XXX_Size() int {
	return xxx_messageInfo_ShopStream.Size(m)
}
func (m *ShopStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopStream.DiscardUnknown(m)
}

var xxx_messageInfo_ShopStream proto.InternalMessageInfo

type isShopStream_Event interface {
	isShopStream_Event()
}

type ShopStream_PlayerJoin struct {
	PlayerJoin *Player `protobuf:"bytes,1,opt,name=playerJoin,proto3,oneof"`
}

type ShopStream_ShopRefreshTime struct {
	ShopRefreshTime int32 `protobuf:"varint,2,opt,name=shopRefreshTime,proto3,oneof"`
}

type ShopStream_ShopRefresh struct {
	ShopRefresh bool `protobuf:"varint,3,opt,name=shopRefresh,proto3,oneof"`
}

type ShopStream_OnePlayerWithCards struct {
	OnePlayerWithCards *PlayerWithCards `protobuf:"bytes,4,opt,name=onePlayerWithCards,proto3,oneof"`
}

type ShopStream_AllCardInShopping struct {
	AllCardInShopping *AllCard `protobuf:"bytes,5,opt,name=allCardInShopping,proto3,oneof"`
}

type ShopStream_OnBuyCard struct {
	OnBuyCard *PlayerAndCard `protobuf:"bytes,6,opt,name=onBuyCard,proto3,oneof"`
}

type ShopStream_OnCardBought struct {
	OnCardBought bool `protobuf:"varint,7,opt,name=onCardBought,proto3,oneof"`
}

type ShopStream_OnSellCard struct {
	OnSellCard *PlayerAndCard `protobuf:"bytes,8,opt,name=onSellCard,proto3,oneof"`
}

type ShopStream_OnCardSold struct {
	OnCardSold bool `protobuf:"varint,9,opt,name=onCardSold,proto3,oneof"`
}

type ShopStream_OnUpgradeCard struct {
	OnUpgradeCard *PlayerAndCard `protobuf:"bytes,10,opt,name=onUpgradeCard,proto3,oneof"`
}

type ShopStream_OnCardUpgraded struct {
	OnCardUpgraded bool `protobuf:"varint,11,opt,name=onCardUpgraded,proto3,oneof"`
}

type ShopStream_OnCardDeckSlot struct {
	OnCardDeckSlot *PlayerAndSlot `protobuf:"bytes,12,opt,name=onCardDeckSlot,proto3,oneof"`
}

type ShopStream_OnSuccessAddSlot struct {
	OnSuccessAddSlot bool `protobuf:"varint,13,opt,name=onSuccessAddSlot,proto3,oneof"`
}

type ShopStream_ExcMessage struct {
	ExcMessage *ExceptionErrorMessage `protobuf:"bytes,14,opt,name=excMessage,proto3,oneof"`
}

func (*ShopStream_PlayerJoin) isShopStream_Event() {}

func (*ShopStream_ShopRefreshTime) isShopStream_Event() {}

func (*ShopStream_ShopRefresh) isShopStream_Event() {}

func (*ShopStream_OnePlayerWithCards) isShopStream_Event() {}

func (*ShopStream_AllCardInShopping) isShopStream_Event() {}

func (*ShopStream_OnBuyCard) isShopStream_Event() {}

func (*ShopStream_OnCardBought) isShopStream_Event() {}

func (*ShopStream_OnSellCard) isShopStream_Event() {}

func (*ShopStream_OnCardSold) isShopStream_Event() {}

func (*ShopStream_OnUpgradeCard) isShopStream_Event() {}

func (*ShopStream_OnCardUpgraded) isShopStream_Event() {}

func (*ShopStream_OnCardDeckSlot) isShopStream_Event() {}

func (*ShopStream_OnSuccessAddSlot) isShopStream_Event() {}

func (*ShopStream_ExcMessage) isShopStream_Event() {}

func (m *ShopStream) GetEvent() isShopStream_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ShopStream) GetPlayerJoin() *Player {
	if x, ok := m.GetEvent().(*ShopStream_PlayerJoin); ok {
		return x.PlayerJoin
	}
	return nil
}

func (m *ShopStream) GetShopRefreshTime() int32 {
	if x, ok := m.GetEvent().(*ShopStream_ShopRefreshTime); ok {
		return x.ShopRefreshTime
	}
	return 0
}

func (m *ShopStream) GetShopRefresh() bool {
	if x, ok := m.GetEvent().(*ShopStream_ShopRefresh); ok {
		return x.ShopRefresh
	}
	return false
}

func (m *ShopStream) GetOnePlayerWithCards() *PlayerWithCards {
	if x, ok := m.GetEvent().(*ShopStream_OnePlayerWithCards); ok {
		return x.OnePlayerWithCards
	}
	return nil
}

func (m *ShopStream) GetAllCardInShopping() *AllCard {
	if x, ok := m.GetEvent().(*ShopStream_AllCardInShopping); ok {
		return x.AllCardInShopping
	}
	return nil
}

func (m *ShopStream) GetOnBuyCard() *PlayerAndCard {
	if x, ok := m.GetEvent().(*ShopStream_OnBuyCard); ok {
		return x.OnBuyCard
	}
	return nil
}

func (m *ShopStream) GetOnCardBought() bool {
	if x, ok := m.GetEvent().(*ShopStream_OnCardBought); ok {
		return x.OnCardBought
	}
	return false
}

func (m *ShopStream) GetOnSellCard() *PlayerAndCard {
	if x, ok := m.GetEvent().(*ShopStream_OnSellCard); ok {
		return x.OnSellCard
	}
	return nil
}

func (m *ShopStream) GetOnCardSold() bool {
	if x, ok := m.GetEvent().(*ShopStream_OnCardSold); ok {
		return x.OnCardSold
	}
	return false
}

func (m *ShopStream) GetOnUpgradeCard() *PlayerAndCard {
	if x, ok := m.GetEvent().(*ShopStream_OnUpgradeCard); ok {
		return x.OnUpgradeCard
	}
	return nil
}

func (m *ShopStream) GetOnCardUpgraded() bool {
	if x, ok := m.GetEvent().(*ShopStream_OnCardUpgraded); ok {
		return x.OnCardUpgraded
	}
	return false
}

func (m *ShopStream) GetOnCardDeckSlot() *PlayerAndSlot {
	if x, ok := m.GetEvent().(*ShopStream_OnCardDeckSlot); ok {
		return x.OnCardDeckSlot
	}
	return nil
}

func (m *ShopStream) GetOnSuccessAddSlot() bool {
	if x, ok := m.GetEvent().(*ShopStream_OnSuccessAddSlot); ok {
		return x.OnSuccessAddSlot
	}
	return false
}

func (m *ShopStream) GetExcMessage() *ExceptionErrorMessage {
	if x, ok := m.GetEvent().(*ShopStream_ExcMessage); ok {
		return x.ExcMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ShopStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ShopStream_PlayerJoin)(nil),
		(*ShopStream_ShopRefreshTime)(nil),
		(*ShopStream_ShopRefresh)(nil),
		(*ShopStream_OnePlayerWithCards)(nil),
		(*ShopStream_AllCardInShopping)(nil),
		(*ShopStream_OnBuyCard)(nil),
		(*ShopStream_OnCardBought)(nil),
		(*ShopStream_OnSellCard)(nil),
		(*ShopStream_OnCardSold)(nil),
		(*ShopStream_OnUpgradeCard)(nil),
		(*ShopStream_OnCardUpgraded)(nil),
		(*ShopStream_OnCardDeckSlot)(nil),
		(*ShopStream_OnSuccessAddSlot)(nil),
		(*ShopStream_ExcMessage)(nil),
	}
}

type QueueStream struct {
	// Types that are valid to be assigned to Event:
	//	*QueueStream_OnjoinWaitingRoom
	//	*QueueStream_OnLeftWaitingRoom
	//	*QueueStream_OnBattleFound
	//	*QueueStream_OnBattleNotFound
	Event                isQueueStream_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *QueueStream) Reset()         { *m = QueueStream{} }
func (m *QueueStream) String() string { return proto.CompactTextString(m) }
func (*QueueStream) ProtoMessage()    {}
func (*QueueStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{9}
}

func (m *QueueStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueStream.Unmarshal(m, b)
}
func (m *QueueStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueStream.Marshal(b, m, deterministic)
}
func (m *QueueStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueStream.Merge(m, src)
}
func (m *QueueStream) XXX_Size() int {
	return xxx_messageInfo_QueueStream.Size(m)
}
func (m *QueueStream) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueStream.DiscardUnknown(m)
}

var xxx_messageInfo_QueueStream proto.InternalMessageInfo

type isQueueStream_Event interface {
	isQueueStream_Event()
}

type QueueStream_OnjoinWaitingRoom struct {
	OnjoinWaitingRoom *Player `protobuf:"bytes,1,opt,name=onjoinWaitingRoom,proto3,oneof"`
}

type QueueStream_OnLeftWaitingRoom struct {
	OnLeftWaitingRoom *Player `protobuf:"bytes,2,opt,name=onLeftWaitingRoom,proto3,oneof"`
}

type QueueStream_OnBattleFound struct {
	OnBattleFound *RoomData `protobuf:"bytes,3,opt,name=onBattleFound,proto3,oneof"`
}

type QueueStream_OnBattleNotFound struct {
	OnBattleNotFound bool `protobuf:"varint,4,opt,name=onBattleNotFound,proto3,oneof"`
}

func (*QueueStream_OnjoinWaitingRoom) isQueueStream_Event() {}

func (*QueueStream_OnLeftWaitingRoom) isQueueStream_Event() {}

func (*QueueStream_OnBattleFound) isQueueStream_Event() {}

func (*QueueStream_OnBattleNotFound) isQueueStream_Event() {}

func (m *QueueStream) GetEvent() isQueueStream_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *QueueStream) GetOnjoinWaitingRoom() *Player {
	if x, ok := m.GetEvent().(*QueueStream_OnjoinWaitingRoom); ok {
		return x.OnjoinWaitingRoom
	}
	return nil
}

func (m *QueueStream) GetOnLeftWaitingRoom() *Player {
	if x, ok := m.GetEvent().(*QueueStream_OnLeftWaitingRoom); ok {
		return x.OnLeftWaitingRoom
	}
	return nil
}

func (m *QueueStream) GetOnBattleFound() *RoomData {
	if x, ok := m.GetEvent().(*QueueStream_OnBattleFound); ok {
		return x.OnBattleFound
	}
	return nil
}

func (m *QueueStream) GetOnBattleNotFound() bool {
	if x, ok := m.GetEvent().(*QueueStream_OnBattleNotFound); ok {
		return x.OnBattleNotFound
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*QueueStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*QueueStream_OnjoinWaitingRoom)(nil),
		(*QueueStream_OnLeftWaitingRoom)(nil),
		(*QueueStream_OnBattleFound)(nil),
		(*QueueStream_OnBattleNotFound)(nil),
	}
}

type PlayerWithCards struct {
	Owner                *Player  `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Deck                 []*Card  `protobuf:"bytes,2,rep,name=deck,proto3" json:"deck,omitempty"`
	Deployed             []*Card  `protobuf:"bytes,3,rep,name=deployed,proto3" json:"deployed,omitempty"`
	Reserve              []*Card  `protobuf:"bytes,4,rep,name=reserve,proto3" json:"reserve,omitempty"`
	Hp                   int64    `protobuf:"varint,5,opt,name=hp,proto3" json:"hp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerWithCards) Reset()         { *m = PlayerWithCards{} }
func (m *PlayerWithCards) String() string { return proto.CompactTextString(m) }
func (*PlayerWithCards) ProtoMessage()    {}
func (*PlayerWithCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{10}
}

func (m *PlayerWithCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerWithCards.Unmarshal(m, b)
}
func (m *PlayerWithCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerWithCards.Marshal(b, m, deterministic)
}
func (m *PlayerWithCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerWithCards.Merge(m, src)
}
func (m *PlayerWithCards) XXX_Size() int {
	return xxx_messageInfo_PlayerWithCards.Size(m)
}
func (m *PlayerWithCards) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerWithCards.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerWithCards proto.InternalMessageInfo

func (m *PlayerWithCards) GetOwner() *Player {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *PlayerWithCards) GetDeck() []*Card {
	if m != nil {
		return m.Deck
	}
	return nil
}

func (m *PlayerWithCards) GetDeployed() []*Card {
	if m != nil {
		return m.Deployed
	}
	return nil
}

func (m *PlayerWithCards) GetReserve() []*Card {
	if m != nil {
		return m.Reserve
	}
	return nil
}

func (m *PlayerWithCards) GetHp() int64 {
	if m != nil {
		return m.Hp
	}
	return 0
}

type AllPlayerWithCards struct {
	Players              []*PlayerWithCards `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AllPlayerWithCards) Reset()         { *m = AllPlayerWithCards{} }
func (m *AllPlayerWithCards) String() string { return proto.CompactTextString(m) }
func (*AllPlayerWithCards) ProtoMessage()    {}
func (*AllPlayerWithCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{11}
}

func (m *AllPlayerWithCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPlayerWithCards.Unmarshal(m, b)
}
func (m *AllPlayerWithCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPlayerWithCards.Marshal(b, m, deterministic)
}
func (m *AllPlayerWithCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPlayerWithCards.Merge(m, src)
}
func (m *AllPlayerWithCards) XXX_Size() int {
	return xxx_messageInfo_AllPlayerWithCards.Size(m)
}
func (m *AllPlayerWithCards) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPlayerWithCards.DiscardUnknown(m)
}

var xxx_messageInfo_AllPlayerWithCards proto.InternalMessageInfo

func (m *AllPlayerWithCards) GetPlayers() []*PlayerWithCards {
	if m != nil {
		return m.Players
	}
	return nil
}

type RoomData struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomName             string             `protobuf:"bytes,2,opt,name=roomName,proto3" json:"roomName,omitempty"`
	Players              []*PlayerWithCards `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	MaxPlayer            int32              `protobuf:"varint,5,opt,name=maxPlayer,proto3" json:"maxPlayer,omitempty"`
	MaxPlayerDeck        int32              `protobuf:"varint,6,opt,name=maxPlayerDeck,proto3" json:"maxPlayerDeck,omitempty"`
	MaxCurrentDeployment int32              `protobuf:"varint,7,opt,name=maxCurrentDeployment,proto3" json:"maxCurrentDeployment,omitempty"`
	MaxDeployment        int32              `protobuf:"varint,8,opt,name=maxDeployment,proto3" json:"maxDeployment,omitempty"`
	EachPlayerHealth     int64              `protobuf:"varint,9,opt,name=eachPlayerHealth,proto3" json:"eachPlayerHealth,omitempty"`
	CoolDownTime         int32              `protobuf:"varint,10,opt,name=coolDownTime,proto3" json:"coolDownTime,omitempty"`
	Reward               *RoomReward        `protobuf:"bytes,11,opt,name=reward,proto3" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RoomData) Reset()         { *m = RoomData{} }
func (m *RoomData) String() string { return proto.CompactTextString(m) }
func (*RoomData) ProtoMessage()    {}
func (*RoomData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{12}
}

func (m *RoomData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomData.Unmarshal(m, b)
}
func (m *RoomData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomData.Marshal(b, m, deterministic)
}
func (m *RoomData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomData.Merge(m, src)
}
func (m *RoomData) XXX_Size() int {
	return xxx_messageInfo_RoomData.Size(m)
}
func (m *RoomData) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomData.DiscardUnknown(m)
}

var xxx_messageInfo_RoomData proto.InternalMessageInfo

func (m *RoomData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoomData) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *RoomData) GetPlayers() []*PlayerWithCards {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *RoomData) GetMaxPlayer() int32 {
	if m != nil {
		return m.MaxPlayer
	}
	return 0
}

func (m *RoomData) GetMaxPlayerDeck() int32 {
	if m != nil {
		return m.MaxPlayerDeck
	}
	return 0
}

func (m *RoomData) GetMaxCurrentDeployment() int32 {
	if m != nil {
		return m.MaxCurrentDeployment
	}
	return 0
}

func (m *RoomData) GetMaxDeployment() int32 {
	if m != nil {
		return m.MaxDeployment
	}
	return 0
}

func (m *RoomData) GetEachPlayerHealth() int64 {
	if m != nil {
		return m.EachPlayerHealth
	}
	return 0
}

func (m *RoomData) GetCoolDownTime() int32 {
	if m != nil {
		return m.CoolDownTime
	}
	return 0
}

func (m *RoomData) GetReward() *RoomReward {
	if m != nil {
		return m.Reward
	}
	return nil
}

type RoomReward struct {
	CardReward           []*Card  `protobuf:"bytes,1,rep,name=cardReward,proto3" json:"cardReward,omitempty"`
	CashReward           int64    `protobuf:"varint,2,opt,name=cashReward,proto3" json:"cashReward,omitempty"`
	ExpReward            int64    `protobuf:"varint,3,opt,name=expReward,proto3" json:"expReward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomReward) Reset()         { *m = RoomReward{} }
func (m *RoomReward) String() string { return proto.CompactTextString(m) }
func (*RoomReward) ProtoMessage()    {}
func (*RoomReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{13}
}

func (m *RoomReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomReward.Unmarshal(m, b)
}
func (m *RoomReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomReward.Marshal(b, m, deterministic)
}
func (m *RoomReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomReward.Merge(m, src)
}
func (m *RoomReward) XXX_Size() int {
	return xxx_messageInfo_RoomReward.Size(m)
}
func (m *RoomReward) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomReward.DiscardUnknown(m)
}

var xxx_messageInfo_RoomReward proto.InternalMessageInfo

func (m *RoomReward) GetCardReward() []*Card {
	if m != nil {
		return m.CardReward
	}
	return nil
}

func (m *RoomReward) GetCashReward() int64 {
	if m != nil {
		return m.CashReward
	}
	return 0
}

func (m *RoomReward) GetExpReward() int64 {
	if m != nil {
		return m.ExpReward
	}
	return 0
}

type AllRoom struct {
	Rooms                []*RoomData `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AllRoom) Reset()         { *m = AllRoom{} }
func (m *AllRoom) String() string { return proto.CompactTextString(m) }
func (*AllRoom) ProtoMessage()    {}
func (*AllRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{14}
}

func (m *AllRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllRoom.Unmarshal(m, b)
}
func (m *AllRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllRoom.Marshal(b, m, deterministic)
}
func (m *AllRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRoom.Merge(m, src)
}
func (m *AllRoom) XXX_Size() int {
	return xxx_messageInfo_AllRoom.Size(m)
}
func (m *AllRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRoom.DiscardUnknown(m)
}

var xxx_messageInfo_AllRoom proto.InternalMessageInfo

func (m *AllRoom) GetRooms() []*RoomData {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type PlayerBattleResult struct {
	Owner                *Player  `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	DamageReceive        int64    `protobuf:"varint,2,opt,name=damageReceive,proto3" json:"damageReceive,omitempty"`
	EnemyAtk             int64    `protobuf:"varint,3,opt,name=enemyAtk,proto3" json:"enemyAtk,omitempty"`
	OwnerDef             int64    `protobuf:"varint,4,opt,name=ownerDef,proto3" json:"ownerDef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerBattleResult) Reset()         { *m = PlayerBattleResult{} }
func (m *PlayerBattleResult) String() string { return proto.CompactTextString(m) }
func (*PlayerBattleResult) ProtoMessage()    {}
func (*PlayerBattleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{15}
}

func (m *PlayerBattleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerBattleResult.Unmarshal(m, b)
}
func (m *PlayerBattleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerBattleResult.Marshal(b, m, deterministic)
}
func (m *PlayerBattleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerBattleResult.Merge(m, src)
}
func (m *PlayerBattleResult) XXX_Size() int {
	return xxx_messageInfo_PlayerBattleResult.Size(m)
}
func (m *PlayerBattleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerBattleResult.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerBattleResult proto.InternalMessageInfo

func (m *PlayerBattleResult) GetOwner() *Player {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *PlayerBattleResult) GetDamageReceive() int64 {
	if m != nil {
		return m.DamageReceive
	}
	return 0
}

func (m *PlayerBattleResult) GetEnemyAtk() int64 {
	if m != nil {
		return m.EnemyAtk
	}
	return 0
}

func (m *PlayerBattleResult) GetOwnerDef() int64 {
	if m != nil {
		return m.OwnerDef
	}
	return 0
}

type EndResult struct {
	Winner          *Player               `protobuf:"bytes,1,opt,name=winner,proto3" json:"winner,omitempty"`
	AllBattleResult []*PlayerBattleResult `protobuf:"bytes,2,rep,name=allBattleResult,proto3" json:"allBattleResult,omitempty"`
	// for flagging winning status
	// 0 = is enemy player hp is 0
	// 1 = is enemy card is 0
	// 2 = is enemy hp is lower
	FlagResult           int32       `protobuf:"varint,3,opt,name=flagResult,proto3" json:"flagResult,omitempty"`
	Reward               *RoomReward `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EndResult) Reset()         { *m = EndResult{} }
func (m *EndResult) String() string { return proto.CompactTextString(m) }
func (*EndResult) ProtoMessage()    {}
func (*EndResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{16}
}

func (m *EndResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndResult.Unmarshal(m, b)
}
func (m *EndResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndResult.Marshal(b, m, deterministic)
}
func (m *EndResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndResult.Merge(m, src)
}
func (m *EndResult) XXX_Size() int {
	return xxx_messageInfo_EndResult.Size(m)
}
func (m *EndResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EndResult.DiscardUnknown(m)
}

var xxx_messageInfo_EndResult proto.InternalMessageInfo

func (m *EndResult) GetWinner() *Player {
	if m != nil {
		return m.Winner
	}
	return nil
}

func (m *EndResult) GetAllBattleResult() []*PlayerBattleResult {
	if m != nil {
		return m.AllBattleResult
	}
	return nil
}

func (m *EndResult) GetFlagResult() int32 {
	if m != nil {
		return m.FlagResult
	}
	return 0
}

func (m *EndResult) GetReward() *RoomReward {
	if m != nil {
		return m.Reward
	}
	return nil
}

type AllPlayerBattleResult struct {
	Results              []*PlayerBattleResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AllPlayerBattleResult) Reset()         { *m = AllPlayerBattleResult{} }
func (m *AllPlayerBattleResult) String() string { return proto.CompactTextString(m) }
func (*AllPlayerBattleResult) ProtoMessage()    {}
func (*AllPlayerBattleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{17}
}

func (m *AllPlayerBattleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllPlayerBattleResult.Unmarshal(m, b)
}
func (m *AllPlayerBattleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllPlayerBattleResult.Marshal(b, m, deterministic)
}
func (m *AllPlayerBattleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllPlayerBattleResult.Merge(m, src)
}
func (m *AllPlayerBattleResult) XXX_Size() int {
	return xxx_messageInfo_AllPlayerBattleResult.Size(m)
}
func (m *AllPlayerBattleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AllPlayerBattleResult.DiscardUnknown(m)
}

var xxx_messageInfo_AllPlayerBattleResult proto.InternalMessageInfo

func (m *AllPlayerBattleResult) GetResults() []*PlayerBattleResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type CountDownRoomUpdate struct {
	BattleTime           int32     `protobuf:"varint,1,opt,name=battleTime,proto3" json:"battleTime,omitempty"`
	UpdatedRoom          *RoomData `protobuf:"bytes,2,opt,name=updatedRoom,proto3" json:"updatedRoom,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CountDownRoomUpdate) Reset()         { *m = CountDownRoomUpdate{} }
func (m *CountDownRoomUpdate) String() string { return proto.CompactTextString(m) }
func (*CountDownRoomUpdate) ProtoMessage()    {}
func (*CountDownRoomUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{18}
}

func (m *CountDownRoomUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountDownRoomUpdate.Unmarshal(m, b)
}
func (m *CountDownRoomUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountDownRoomUpdate.Marshal(b, m, deterministic)
}
func (m *CountDownRoomUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountDownRoomUpdate.Merge(m, src)
}
func (m *CountDownRoomUpdate) XXX_Size() int {
	return xxx_messageInfo_CountDownRoomUpdate.Size(m)
}
func (m *CountDownRoomUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CountDownRoomUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CountDownRoomUpdate proto.InternalMessageInfo

func (m *CountDownRoomUpdate) GetBattleTime() int32 {
	if m != nil {
		return m.BattleTime
	}
	return 0
}

func (m *CountDownRoomUpdate) GetUpdatedRoom() *RoomData {
	if m != nil {
		return m.UpdatedRoom
	}
	return nil
}

type RoomStream struct {
	// Types that are valid to be assigned to Event:
	//	*RoomStream_PlayerJoin
	//	*RoomStream_PlayerLeft
	//	*RoomStream_OnRoomUpdate
	//	*RoomStream_CountDown
	//	*RoomStream_BattleResult
	//	*RoomStream_Result
	//	*RoomStream_OnDraw
	//	*RoomStream_DeployCard
	//	*RoomStream_PickupCard
	//	*RoomStream_GetOneRoom
	//	*RoomStream_ExcMessage
	Event isRoomStream_Event `protobuf_oneof:"event"`
	// for flagging in server
	// 0 = room is good to go
	// 1 = room must be stoped
	RoomFlag int32 `protobuf:"varint,12,opt,name=roomFlag,proto3" json:"roomFlag,omitempty"`
	// for flagging in server and client
	// 0 = all player is not ready
	// 1 = all player is ready
	// 2 = only some player ready
	PlayersFlag int32 `protobuf:"varint,13,opt,name=playersFlag,proto3" json:"playersFlag,omitempty"`
	// for flagging in server
	// 0 = battle countdown is good to go
	// 1 = battle countdown must stop
	BattleFlag int32 `protobuf:"varint,14,opt,name=battleFlag,proto3" json:"battleFlag,omitempty"`
	// for join and leave
	// this for identifier
	IdRoom               string   `protobuf:"bytes,15,opt,name=idRoom,proto3" json:"idRoom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomStream) Reset()         { *m = RoomStream{} }
func (m *RoomStream) String() string { return proto.CompactTextString(m) }
func (*RoomStream) ProtoMessage()    {}
func (*RoomStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{19}
}

func (m *RoomStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomStream.Unmarshal(m, b)
}
func (m *RoomStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomStream.Marshal(b, m, deterministic)
}
func (m *RoomStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomStream.Merge(m, src)
}
func (m *RoomStream) XXX_Size() int {
	return xxx_messageInfo_RoomStream.Size(m)
}
func (m *RoomStream) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomStream.DiscardUnknown(m)
}

var xxx_messageInfo_RoomStream proto.InternalMessageInfo

type isRoomStream_Event interface {
	isRoomStream_Event()
}

type RoomStream_PlayerJoin struct {
	PlayerJoin *PlayerWithCards `protobuf:"bytes,1,opt,name=playerJoin,proto3,oneof"`
}

type RoomStream_PlayerLeft struct {
	PlayerLeft *PlayerWithCards `protobuf:"bytes,2,opt,name=playerLeft,proto3,oneof"`
}

type RoomStream_OnRoomUpdate struct {
	OnRoomUpdate *RoomData `protobuf:"bytes,3,opt,name=onRoomUpdate,proto3,oneof"`
}

type RoomStream_CountDown struct {
	CountDown *CountDownRoomUpdate `protobuf:"bytes,4,opt,name=countDown,proto3,oneof"`
}

type RoomStream_BattleResult struct {
	BattleResult *AllPlayerBattleResult `protobuf:"bytes,5,opt,name=battleResult,proto3,oneof"`
}

type RoomStream_Result struct {
	Result *EndResult `protobuf:"bytes,6,opt,name=result,proto3,oneof"`
}

type RoomStream_OnDraw struct {
	OnDraw int32 `protobuf:"varint,7,opt,name=onDraw,proto3,oneof"`
}

type RoomStream_DeployCard struct {
	DeployCard *PlayerAndCard `protobuf:"bytes,8,opt,name=deployCard,proto3,oneof"`
}

type RoomStream_PickupCard struct {
	PickupCard *PlayerAndCard `protobuf:"bytes,9,opt,name=pickupCard,proto3,oneof"`
}

type RoomStream_GetOneRoom struct {
	GetOneRoom *RoomData `protobuf:"bytes,10,opt,name=getOneRoom,proto3,oneof"`
}

type RoomStream_ExcMessage struct {
	ExcMessage *ExceptionErrorMessage `protobuf:"bytes,11,opt,name=excMessage,proto3,oneof"`
}

func (*RoomStream_PlayerJoin) isRoomStream_Event() {}

func (*RoomStream_PlayerLeft) isRoomStream_Event() {}

func (*RoomStream_OnRoomUpdate) isRoomStream_Event() {}

func (*RoomStream_CountDown) isRoomStream_Event() {}

func (*RoomStream_BattleResult) isRoomStream_Event() {}

func (*RoomStream_Result) isRoomStream_Event() {}

func (*RoomStream_OnDraw) isRoomStream_Event() {}

func (*RoomStream_DeployCard) isRoomStream_Event() {}

func (*RoomStream_PickupCard) isRoomStream_Event() {}

func (*RoomStream_GetOneRoom) isRoomStream_Event() {}

func (*RoomStream_ExcMessage) isRoomStream_Event() {}

func (m *RoomStream) GetEvent() isRoomStream_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *RoomStream) GetPlayerJoin() *PlayerWithCards {
	if x, ok := m.GetEvent().(*RoomStream_PlayerJoin); ok {
		return x.PlayerJoin
	}
	return nil
}

func (m *RoomStream) GetPlayerLeft() *PlayerWithCards {
	if x, ok := m.GetEvent().(*RoomStream_PlayerLeft); ok {
		return x.PlayerLeft
	}
	return nil
}

func (m *RoomStream) GetOnRoomUpdate() *RoomData {
	if x, ok := m.GetEvent().(*RoomStream_OnRoomUpdate); ok {
		return x.OnRoomUpdate
	}
	return nil
}

func (m *RoomStream) GetCountDown() *CountDownRoomUpdate {
	if x, ok := m.GetEvent().(*RoomStream_CountDown); ok {
		return x.CountDown
	}
	return nil
}

func (m *RoomStream) GetBattleResult() *AllPlayerBattleResult {
	if x, ok := m.GetEvent().(*RoomStream_BattleResult); ok {
		return x.BattleResult
	}
	return nil
}

func (m *RoomStream) GetResult() *EndResult {
	if x, ok := m.GetEvent().(*RoomStream_Result); ok {
		return x.Result
	}
	return nil
}

func (m *RoomStream) GetOnDraw() int32 {
	if x, ok := m.GetEvent().(*RoomStream_OnDraw); ok {
		return x.OnDraw
	}
	return 0
}

func (m *RoomStream) GetDeployCard() *PlayerAndCard {
	if x, ok := m.GetEvent().(*RoomStream_DeployCard); ok {
		return x.DeployCard
	}
	return nil
}

func (m *RoomStream) GetPickupCard() *PlayerAndCard {
	if x, ok := m.GetEvent().(*RoomStream_PickupCard); ok {
		return x.PickupCard
	}
	return nil
}

func (m *RoomStream) GetGetOneRoom() *RoomData {
	if x, ok := m.GetEvent().(*RoomStream_GetOneRoom); ok {
		return x.GetOneRoom
	}
	return nil
}

func (m *RoomStream) GetExcMessage() *ExceptionErrorMessage {
	if x, ok := m.GetEvent().(*RoomStream_ExcMessage); ok {
		return x.ExcMessage
	}
	return nil
}

func (m *RoomStream) GetRoomFlag() int32 {
	if m != nil {
		return m.RoomFlag
	}
	return 0
}

func (m *RoomStream) GetPlayersFlag() int32 {
	if m != nil {
		return m.PlayersFlag
	}
	return 0
}

func (m *RoomStream) GetBattleFlag() int32 {
	if m != nil {
		return m.BattleFlag
	}
	return 0
}

func (m *RoomStream) GetIdRoom() string {
	if m != nil {
		return m.IdRoom
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RoomStream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RoomStream_PlayerJoin)(nil),
		(*RoomStream_PlayerLeft)(nil),
		(*RoomStream_OnRoomUpdate)(nil),
		(*RoomStream_CountDown)(nil),
		(*RoomStream_BattleResult)(nil),
		(*RoomStream_Result)(nil),
		(*RoomStream_OnDraw)(nil),
		(*RoomStream_DeployCard)(nil),
		(*RoomStream_PickupCard)(nil),
		(*RoomStream_GetOneRoom)(nil),
		(*RoomStream_ExcMessage)(nil),
	}
}

type ExceptionErrorMessage struct {
	ExceptionMessage     string   `protobuf:"bytes,1,opt,name=exceptionMessage,proto3" json:"exceptionMessage,omitempty"`
	ExceptionFlag        int32    `protobuf:"varint,2,opt,name=exceptionFlag,proto3" json:"exceptionFlag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExceptionErrorMessage) Reset()         { *m = ExceptionErrorMessage{} }
func (m *ExceptionErrorMessage) String() string { return proto.CompactTextString(m) }
func (*ExceptionErrorMessage) ProtoMessage()    {}
func (*ExceptionErrorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a7a24134b7ec3988, []int{20}
}

func (m *ExceptionErrorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExceptionErrorMessage.Unmarshal(m, b)
}
func (m *ExceptionErrorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExceptionErrorMessage.Marshal(b, m, deterministic)
}
func (m *ExceptionErrorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExceptionErrorMessage.Merge(m, src)
}
func (m *ExceptionErrorMessage) XXX_Size() int {
	return xxx_messageInfo_ExceptionErrorMessage.Size(m)
}
func (m *ExceptionErrorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExceptionErrorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExceptionErrorMessage proto.InternalMessageInfo

func (m *ExceptionErrorMessage) GetExceptionMessage() string {
	if m != nil {
		return m.ExceptionMessage
	}
	return ""
}

func (m *ExceptionErrorMessage) GetExceptionFlag() int32 {
	if m != nil {
		return m.ExceptionFlag
	}
	return 0
}

func init() {
	proto.RegisterType((*Player)(nil), "cardBattle.player")
	proto.RegisterType((*AllPlayer)(nil), "cardBattle.allPlayer")
	proto.RegisterType((*Card)(nil), "cardBattle.card")
	proto.RegisterType((*AllCard)(nil), "cardBattle.allCard")
	proto.RegisterType((*PlayerAndCard)(nil), "cardBattle.playerAndCard")
	proto.RegisterType((*PlayerAndSlot)(nil), "cardBattle.playerAndSlot")
	proto.RegisterType((*LobbyStream)(nil), "cardBattle.lobbyStream")
	proto.RegisterType((*ProfileStream)(nil), "cardBattle.profileStream")
	proto.RegisterType((*ShopStream)(nil), "cardBattle.shopStream")
	proto.RegisterType((*QueueStream)(nil), "cardBattle.queueStream")
	proto.RegisterType((*PlayerWithCards)(nil), "cardBattle.playerWithCards")
	proto.RegisterType((*AllPlayerWithCards)(nil), "cardBattle.allPlayerWithCards")
	proto.RegisterType((*RoomData)(nil), "cardBattle.roomData")
	proto.RegisterType((*RoomReward)(nil), "cardBattle.roomReward")
	proto.RegisterType((*AllRoom)(nil), "cardBattle.allRoom")
	proto.RegisterType((*PlayerBattleResult)(nil), "cardBattle.playerBattleResult")
	proto.RegisterType((*EndResult)(nil), "cardBattle.endResult")
	proto.RegisterType((*AllPlayerBattleResult)(nil), "cardBattle.allPlayerBattleResult")
	proto.RegisterType((*CountDownRoomUpdate)(nil), "cardBattle.countDownRoomUpdate")
	proto.RegisterType((*RoomStream)(nil), "cardBattle.roomStream")
	proto.RegisterType((*ExceptionErrorMessage)(nil), "cardBattle.exceptionErrorMessage")
}

func init() { proto.RegisterFile("cardBattle.proto", fileDescriptor_a7a24134b7ec3988) }

var fileDescriptor_a7a24134b7ec3988 = []byte{
	// 1672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xde, 0xff, 0xec, 0x9e, 0xcd, 0xe6, 0x67, 0x9a, 0xb4, 0xcb, 0x82, 0x4a, 0xb0, 0xaa, 0x2a,
	0x8a, 0xaa, 0x52, 0x02, 0xad, 0x5a, 0xa0, 0xa0, 0xfc, 0xb4, 0x04, 0xfa, 0xef, 0x6d, 0xd4, 0xeb,
	0x89, 0x3d, 0xd9, 0x35, 0xb1, 0x3d, 0xc6, 0xeb, 0x4d, 0x36, 0x12, 0x4f, 0x00, 0x57, 0x48, 0x48,
	0xdc, 0x70, 0xcd, 0x53, 0xf0, 0x06, 0x5c, 0xf1, 0x0a, 0x5c, 0xf1, 0x18, 0x68, 0xce, 0x8c, 0xed,
	0xf1, 0xda, 0xbb, 0x09, 0xed, 0x9d, 0xe7, 0x3b, 0xdf, 0x39, 0x33, 0xe7, 0xcc, 0x39, 0x33, 0x67,
	0x0c, 0x2b, 0x16, 0x0d, 0xed, 0x5d, 0x1a, 0x45, 0x2e, 0xbb, 0x1d, 0x84, 0x3c, 0xe2, 0x04, 0x52,
	0xc4, 0xf8, 0xa7, 0x0c, 0x8d, 0xc0, 0xa5, 0xe7, 0x2c, 0x24, 0x4b, 0x50, 0x71, 0xec, 0x6e, 0x79,
	0xa3, 0xbc, 0xd9, 0x32, 0x2b, 0x8e, 0x4d, 0x08, 0xd4, 0x7c, 0xea, 0xb1, 0x6e, 0x05, 0x11, 0xfc,
	0x26, 0x57, 0xa1, 0x41, 0x4f, 0x69, 0x44, 0xc3, 0x6e, 0x15, 0x51, 0x35, 0x22, 0x6b, 0x50, 0x77,
	0xd9, 0x29, 0x73, 0xbb, 0xb5, 0x8d, 0xf2, 0x66, 0xdd, 0x94, 0x03, 0x61, 0xc1, 0xa2, 0xa3, 0x61,
	0xb7, 0xbe, 0x51, 0xde, 0xac, 0x9a, 0xf8, 0x4d, 0x56, 0xa0, 0xca, 0x26, 0x41, 0xb7, 0x81, 0x90,
	0xf8, 0x14, 0x36, 0x3d, 0x3a, 0x79, 0x34, 0x09, 0xba, 0x0b, 0x08, 0xaa, 0x11, 0xb9, 0x09, 0x4b,
	0x1e, 0x9d, 0x98, 0x6c, 0xc4, 0xc2, 0x53, 0xd6, 0x77, 0x79, 0xd4, 0x6d, 0xa2, 0xf1, 0x29, 0x94,
	0x6c, 0x40, 0xdb, 0xa3, 0x93, 0x7d, 0x66, 0x9d, 0x20, 0xa9, 0x85, 0x24, 0x1d, 0x32, 0x1e, 0x40,
	0x8b, 0xba, 0xee, 0x4b, 0xe9, 0xe6, 0x2d, 0x58, 0x90, 0x0e, 0x8f, 0xba, 0xe5, 0x8d, 0xea, 0x66,
	0x7b, 0x9b, 0xdc, 0xd6, 0x23, 0x84, 0x22, 0x33, 0xa6, 0x18, 0x7f, 0x94, 0x85, 0x0f, 0xa1, 0x9d,
	0x8b, 0xce, 0x1a, 0xd4, 0x1d, 0x8f, 0x0e, 0xe2, 0xf0, 0xc8, 0x81, 0x40, 0x83, 0xd0, 0xb1, 0x18,
	0x86, 0xa7, 0x6a, 0xca, 0xc1, 0x8c, 0xe8, 0xac, 0x40, 0x95, 0x46, 0x27, 0x2a, 0x38, 0xe2, 0x53,
	0x20, 0x36, 0x3b, 0x8e, 0x63, 0x63, 0xb3, 0x63, 0xa1, 0x69, 0x71, 0x97, 0x87, 0x18, 0x9a, 0xba,
	0x29, 0x07, 0xc9, 0xce, 0x34, 0xd3, 0x9d, 0x31, 0x3e, 0x81, 0x05, 0xea, 0xba, 0x7b, 0x62, 0xa9,
	0x37, 0xa1, 0x2e, 0x96, 0x1c, 0xfb, 0xb7, 0xa2, 0xfb, 0x27, 0x3e, 0x4d, 0x29, 0x36, 0x1c, 0xe8,
	0x48, 0x37, 0x77, 0x7c, 0x1b, 0x15, 0xb7, 0xa0, 0x61, 0xb9, 0x0e, 0xf3, 0x23, 0xf4, 0xb3, 0x38,
	0x32, 0x8a, 0x41, 0x6e, 0x41, 0x53, 0x08, 0xf7, 0x69, 0x44, 0x31, 0x04, 0x45, 0xf3, 0x24, 0x0c,
	0xe3, 0x50, 0x9b, 0x0a, 0x37, 0x6d, 0x13, 0xea, 0x2f, 0xce, 0x7c, 0x16, 0xce, 0x99, 0x49, 0x12,
	0x48, 0x0f, 0x9a, 0x23, 0x97, 0x47, 0xaf, 0xcf, 0x03, 0x19, 0xeb, 0xba, 0x99, 0x8c, 0x8d, 0xdf,
	0x6a, 0xd0, 0x76, 0xf9, 0xd1, 0xd1, 0x79, 0x3f, 0x0a, 0x19, 0xf5, 0xc8, 0x67, 0x00, 0x52, 0xf9,
	0x3b, 0xee, 0xf8, 0xb3, 0x4d, 0x1f, 0x94, 0x4c, 0x8d, 0x97, 0x6a, 0x3d, 0x65, 0xc7, 0x91, 0x72,
	0x66, 0xae, 0x96, 0xe0, 0x91, 0x87, 0xd0, 0x19, 0xb0, 0x68, 0x27, 0xce, 0xab, 0x11, 0x6e, 0x79,
	0x7b, 0x7b, 0x5d, 0x57, 0x4c, 0xb2, 0xee, 0xa0, 0x64, 0x66, 0xd9, 0xe4, 0x3e, 0x2c, 0x0e, 0x58,
	0xf4, 0xc2, 0x67, 0xd2, 0x24, 0xa6, 0xc6, 0xac, 0x69, 0x33, 0x4c, 0xb2, 0x0b, 0xab, 0xf2, 0xab,
	0x3f, 0xb6, 0x2c, 0x36, 0x1a, 0xa1, 0xaf, 0xf5, 0x39, 0xea, 0x79, 0x7a, 0xce, 0x06, 0x7a, 0xde,
	0xb8, 0xb4, 0x0d, 0x0c, 0xc0, 0x33, 0x20, 0xdc, 0x67, 0xd2, 0x9f, 0x37, 0x4e, 0x34, 0xdc, 0xc3,
	0x9c, 0x5b, 0x40, 0x23, 0xef, 0xe7, 0x8d, 0x24, 0x94, 0x83, 0x92, 0x59, 0xa0, 0x48, 0xf6, 0x00,
	0xd8, 0xc4, 0x7a, 0xc6, 0x46, 0x23, 0x51, 0x55, 0x4d, 0x34, 0xf3, 0x91, 0x6e, 0x86, 0x4d, 0x2c,
	0x16, 0x44, 0x0e, 0xf7, 0x1f, 0x85, 0x21, 0x0f, 0x15, 0x51, 0x6c, 0x4a, 0xaa, 0xb6, 0xbb, 0x00,
	0x75, 0x76, 0xca, 0xfc, 0xc8, 0xf8, 0xb3, 0x02, 0x9d, 0x20, 0xe4, 0xc7, 0x8e, 0xcb, 0x54, 0x6e,
	0x14, 0x2f, 0xb7, 0xfc, 0xb6, 0xcb, 0xdd, 0x81, 0x0e, 0xb5, 0xb1, 0x6c, 0x5e, 0x73, 0x71, 0xd0,
	0xa8, 0xbc, 0x79, 0x2f, 0x6f, 0x49, 0x55, 0x97, 0x48, 0x81, 0x8c, 0x06, 0x79, 0x02, 0x24, 0x64,
	0x1e, 0x3f, 0x65, 0x02, 0x7b, 0x1c, 0x72, 0x0f, 0xed, 0x54, 0x2f, 0xb6, 0x53, 0xa0, 0x36, 0x15,
	0xbe, 0xda, 0x3b, 0x86, 0xef, 0xd7, 0x06, 0xc0, 0x68, 0xc8, 0x83, 0x77, 0xaa, 0xab, 0x2d, 0x58,
	0x16, 0x36, 0x4c, 0x76, 0x1c, 0xb2, 0xd1, 0xf0, 0xb5, 0xa3, 0xee, 0x92, 0xfa, 0x41, 0xc9, 0x9c,
	0x16, 0x10, 0x03, 0xda, 0x1a, 0x84, 0x41, 0x68, 0x1e, 0x94, 0x4c, 0x1d, 0x9c, 0xb1, 0x83, 0xb5,
	0xb7, 0x4f, 0xb8, 0x55, 0x75, 0x62, 0x7e, 0xeb, 0xf7, 0x87, 0x3c, 0x08, 0x1c, 0x7f, 0xa0, 0xea,
	0xe8, 0xca, 0x54, 0x11, 0xab, 0xb8, 0xe7, 0xf9, 0xe4, 0x01, 0xb4, 0xb8, 0xbf, 0x3b, 0x3e, 0x17,
	0xb0, 0x2a, 0xa0, 0xb9, 0x5b, 0x97, 0xb2, 0xc9, 0x0d, 0x58, 0xe4, 0xbe, 0xf8, 0xda, 0xe5, 0xe3,
	0xc1, 0x30, 0xc2, 0xca, 0x11, 0x3e, 0x67, 0x50, 0xf2, 0x05, 0x00, 0xf7, 0xfb, 0x4c, 0x4e, 0xac,
	0xca, 0x62, 0xee, 0x0c, 0x1a, 0x9d, 0x6c, 0x08, 0x65, 0xf1, 0xd5, 0xe7, 0xae, 0x8d, 0x37, 0x63,
	0x53, 0x32, 0x62, 0x4c, 0xa4, 0x31, 0xf7, 0x0f, 0x83, 0x41, 0x48, 0x6d, 0xcc, 0xa7, 0x2e, 0x5c,
	0x22, 0x8d, 0x33, 0x1a, 0x64, 0x13, 0x96, 0xa4, 0x41, 0x05, 0xda, 0xdd, 0xb6, 0x9a, 0x68, 0x0a,
	0x27, 0x7b, 0x31, 0x33, 0xb9, 0xac, 0x17, 0xe7, 0xcc, 0x26, 0x08, 0xa9, 0x91, 0x58, 0x85, 0xdc,
	0x82, 0x15, 0xee, 0xab, 0x73, 0x68, 0xc7, 0x46, 0x56, 0xb7, 0xa3, 0x26, 0xcc, 0x49, 0xa6, 0xca,
	0x62, 0xe9, 0x1d, 0xcb, 0xe2, 0xa7, 0x0a, 0xb4, 0x7f, 0x18, 0xb3, 0x71, 0x7c, 0xa6, 0xec, 0xc2,
	0x2a, 0xf7, 0xbf, 0xe7, 0x8e, 0xff, 0x86, 0x3a, 0x91, 0xe3, 0x0f, 0x4c, 0xce, 0xbd, 0xb9, 0xe5,
	0x91, 0xa7, 0x4b, 0x1b, 0xe2, 0x40, 0xd5, 0x6d, 0x54, 0xe6, 0xdb, 0x98, 0xa2, 0x93, 0x2f, 0xc5,
	0x2e, 0x4a, 0xde, 0x63, 0x3e, 0xf6, 0x6d, 0x75, 0x88, 0xac, 0xe9, 0xfa, 0x21, 0xe7, 0x9e, 0xb8,
	0x8b, 0xe5, 0x06, 0x6a, 0x64, 0x19, 0x51, 0x09, 0x3c, 0xe7, 0x91, 0x34, 0x50, 0x4b, 0x23, 0x9a,
	0x95, 0xa4, 0xc1, 0xf8, 0xab, 0x0c, 0xcb, 0x53, 0x95, 0x26, 0xae, 0x75, 0x7e, 0xd1, 0xb5, 0x8e,
	0x04, 0x72, 0x03, 0x6a, 0xb6, 0x3c, 0x36, 0x8b, 0x7b, 0x14, 0x94, 0x8a, 0x2e, 0xc3, 0x66, 0x81,
	0xcb, 0xcf, 0x99, 0xf0, 0xa9, 0x98, 0x99, 0x30, 0xc8, 0x16, 0x2c, 0x84, 0xb2, 0x31, 0xec, 0xd6,
	0x66, 0x90, 0x63, 0x82, 0xe8, 0xe7, 0x86, 0x81, 0x6a, 0xbe, 0x2a, 0xc3, 0xc0, 0x78, 0x02, 0x24,
	0xb9, 0xad, 0x53, 0x7f, 0xee, 0x4e, 0x37, 0x8b, 0xf3, 0xce, 0x99, 0xb4, 0x6b, 0xfc, 0xb9, 0x0a,
	0xcd, 0x38, 0xde, 0xb9, 0xce, 0xb1, 0x27, 0x65, 0xcf, 0xd3, 0xde, 0x3a, 0x19, 0xeb, 0xf3, 0xd5,
	0x2e, 0x3f, 0x1f, 0xf9, 0x00, 0x5a, 0x1e, 0x9d, 0xc8, 0xc5, 0xa3, 0x4f, 0x75, 0x33, 0x05, 0xc8,
	0x0d, 0xe8, 0x24, 0x03, 0xbc, 0x62, 0x1a, 0xc8, 0xc8, 0x82, 0x64, 0x1b, 0xd6, 0x3c, 0x3a, 0xd9,
	0x1b, 0x87, 0x21, 0xf3, 0xa3, 0x7d, 0x0c, 0xa9, 0x27, 0x5a, 0x41, 0xd9, 0x79, 0x16, 0xca, 0x94,
	0x65, 0x8d, 0xdc, 0x4c, 0x2c, 0x6b, 0xac, 0x2d, 0x58, 0x61, 0xd4, 0x1a, 0xaa, 0x4e, 0x88, 0x51,
	0x37, 0x1a, 0xe2, 0x59, 0x54, 0x35, 0x73, 0x38, 0x31, 0x60, 0xd1, 0xe2, 0xdc, 0xdd, 0xe7, 0x67,
	0x3e, 0x5e, 0x18, 0x80, 0x06, 0x33, 0x18, 0xb9, 0x0d, 0x8d, 0x90, 0x9d, 0x89, 0xc3, 0xaa, 0x8d,
	0x59, 0x76, 0x75, 0x3a, 0xcd, 0x4d, 0x94, 0x9a, 0x8a, 0x65, 0xfc, 0x08, 0x90, 0xa2, 0xe4, 0x0e,
	0xe0, 0xfb, 0x47, 0x8e, 0x66, 0xb6, 0xc8, 0x1a, 0x87, 0x5c, 0x17, 0x1a, 0xa3, 0xa1, 0xd2, 0xa8,
	0xe0, 0xca, 0x35, 0x44, 0x44, 0x9f, 0x4d, 0x02, 0x25, 0x96, 0x8d, 0x7f, 0x0a, 0x18, 0x77, 0xb1,
	0x31, 0xc7, 0x32, 0xdd, 0x82, 0xba, 0x58, 0x48, 0x9c, 0x4b, 0x85, 0xe5, 0x69, 0x4a, 0x8a, 0xf1,
	0x7b, 0x19, 0x88, 0xdc, 0x5e, 0x49, 0x30, 0xd9, 0x68, 0xec, 0x46, 0xff, 0xab, 0xc0, 0x3a, 0x36,
	0x15, 0x8f, 0x12, 0x93, 0x59, 0xcc, 0x39, 0x65, 0x6a, 0xe1, 0x59, 0x50, 0x24, 0x23, 0xf3, 0x99,
	0x77, 0xbe, 0x13, 0x9d, 0xa8, 0xa5, 0x27, 0x63, 0x21, 0x43, 0x53, 0xfb, 0xec, 0x18, 0xcf, 0x83,
	0xaa, 0x99, 0x8c, 0x8d, 0xbf, 0xcb, 0xd0, 0x62, 0xbe, 0xad, 0x56, 0xb5, 0x05, 0x8d, 0x33, 0xc7,
	0x9f, 0xbf, 0x2c, 0xc5, 0x20, 0x07, 0xb0, 0x4c, 0x5d, 0x57, 0x77, 0x4a, 0x9d, 0x01, 0xd7, 0xf3,
	0x4a, 0x3a, 0xcb, 0x9c, 0x56, 0x13, 0xfb, 0x72, 0xec, 0xd2, 0x81, 0x32, 0x52, 0xc5, 0x4c, 0xd1,
	0x10, 0x2d, 0x4f, 0x6a, 0x97, 0xca, 0x93, 0x57, 0xb0, 0x9e, 0x1c, 0x01, 0x99, 0x89, 0xee, 0xe3,
	0xb9, 0x32, 0x76, 0xa3, 0x78, 0xe7, 0x2e, 0x5a, 0x6a, 0x4c, 0x37, 0x3c, 0xb8, 0x62, 0xf1, 0xb1,
	0x1f, 0x89, 0xdc, 0x15, 0x29, 0x70, 0x18, 0xd8, 0x34, 0x62, 0x62, 0xe5, 0x47, 0xc8, 0xc7, 0x1c,
	0x2f, 0xcb, 0x95, 0xa7, 0x08, 0xb9, 0x07, 0xed, 0x31, 0x32, 0x6d, 0xed, 0x36, 0x28, 0x4e, 0x17,
	0x9d, 0x68, 0xfc, 0xd2, 0x90, 0xa9, 0xae, 0xae, 0xa7, 0x87, 0x05, 0x6d, 0xdb, 0x05, 0x8d, 0x92,
	0xde, 0xbf, 0x3d, 0x2c, 0x78, 0x17, 0x5d, 0x4e, 0x1d, 0xdf, 0x07, 0x9f, 0x8b, 0xfe, 0x26, 0x75,
	0xfa, 0x82, 0x3b, 0x29, 0xc3, 0x25, 0x5f, 0x43, 0x2b, 0x89, 0x9b, 0xda, 0xbd, 0x0f, 0x33, 0x35,
	0x9a, 0x0f, 0xaa, 0x68, 0xae, 0x12, 0x98, 0x7c, 0x03, 0x8b, 0x47, 0x7a, 0x8a, 0xd5, 0xf3, 0x37,
	0x7f, 0xe1, 0x5e, 0x8b, 0x95, 0xe8, 0x8a, 0xe4, 0x63, 0x91, 0x44, 0x68, 0xa2, 0x91, 0x7f, 0xdf,
	0x25, 0x15, 0x70, 0x50, 0x32, 0x15, 0x8d, 0x74, 0xa1, 0xc1, 0xfd, 0xfd, 0x90, 0x9e, 0xc9, 0x93,
	0x53, 0x48, 0xe4, 0x58, 0xb4, 0x72, 0xf2, 0xaa, 0xba, 0x74, 0x2b, 0x97, 0xd2, 0x85, 0x72, 0xe0,
	0x58, 0x27, 0xe3, 0x00, 0x95, 0x5b, 0x97, 0x50, 0x4e, 0xe9, 0xe4, 0x1e, 0x80, 0x7c, 0x42, 0x62,
	0x3a, 0xc1, 0xdc, 0x8d, 0xd0, 0x98, 0x53, 0xdd, 0x53, 0xfb, 0xad, 0xba, 0xa7, 0xf8, 0xbe, 0x7b,
	0xec, 0xd2, 0x01, 0xf6, 0x7b, 0x75, 0x33, 0x19, 0x93, 0x0d, 0x68, 0xab, 0x3b, 0x0c, 0xc5, 0x1d,
	0xf9, 0xef, 0x46, 0x83, 0xd2, 0x52, 0x41, 0xc2, 0x92, 0x5e, 0x2a, 0x28, 0xbf, 0x0a, 0x0d, 0x47,
	0x56, 0xc9, 0xb2, 0xfc, 0x23, 0x25, 0x47, 0x69, 0x9b, 0xe2, 0xc0, 0x7a, 0xe1, 0x2a, 0xf1, 0x5a,
	0x8a, 0x05, 0xb1, 0x8b, 0xf2, 0x96, 0xce, 0xe1, 0xe2, 0x30, 0x4d, 0x30, 0x5c, 0x88, 0xfc, 0x13,
	0x91, 0x05, 0xb7, 0xff, 0xad, 0xc2, 0x6a, 0x1a, 0x9c, 0x3e, 0x0b, 0x4f, 0x1d, 0x8b, 0x91, 0xaf,
	0x80, 0xa4, 0xa0, 0xc9, 0x06, 0xce, 0x28, 0x62, 0x21, 0x29, 0x38, 0x22, 0x7b, 0x05, 0x98, 0x51,
	0x22, 0x4f, 0x61, 0x4d, 0xd3, 0x4f, 0xab, 0x3b, 0x77, 0x9c, 0x49, 0xbc, 0x37, 0x03, 0x37, 0x4a,
	0x9b, 0xe5, 0x3b, 0x65, 0xf2, 0x02, 0xd6, 0x53, 0xf1, 0x53, 0xed, 0xdf, 0xc9, 0x35, 0x5d, 0x4d,
	0xfb, 0xa9, 0xd2, 0x9b, 0x25, 0x28, 0x32, 0xf8, 0x4a, 0x6b, 0x8e, 0x33, 0x7a, 0x5a, 0xd7, 0xdc,
	0x9b, 0x25, 0x50, 0x06, 0x33, 0xfe, 0xf6, 0xd3, 0x47, 0x68, 0xc6, 0xaf, 0xf4, 0x71, 0xda, 0x9b,
	0x81, 0x2b, 0x6b, 0x87, 0x70, 0x2d, 0x15, 0xbf, 0xcc, 0xfc, 0x11, 0xc8, 0x96, 0x8f, 0x2e, 0xea,
	0xcd, 0x16, 0x49, 0xb3, 0x47, 0x0d, 0xfc, 0x95, 0xfa, 0xe9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x47, 0xd7, 0xab, 0x95, 0x5e, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CardBattleServiceClient is the client API for CardBattleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardBattleServiceClient interface {
	CardBattleRegister(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error)
	CardBattleRoomStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleRoomStreamClient, error)
	CardBattleLobbyStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleLobbyStreamClient, error)
	CardBattleQueueStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleQueueStreamClient, error)
	CardBattleShopStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleShopStreamClient, error)
	CardBattleProfileStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleProfileStreamClient, error)
}

type cardBattleServiceClient struct {
	cc *grpc.ClientConn
}

func NewCardBattleServiceClient(cc *grpc.ClientConn) CardBattleServiceClient {
	return &cardBattleServiceClient{cc}
}

func (c *cardBattleServiceClient) CardBattleRegister(ctx context.Context, in *Player, opts ...grpc.CallOption) (*Player, error) {
	out := new(Player)
	err := c.cc.Invoke(ctx, "/cardBattle.cardBattleService/cardBattleRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardBattleServiceClient) CardBattleRoomStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleRoomStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CardBattleService_serviceDesc.Streams[0], "/cardBattle.cardBattleService/cardBattleRoomStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardBattleServiceCardBattleRoomStreamClient{stream}
	return x, nil
}

type CardBattleService_CardBattleRoomStreamClient interface {
	Send(*RoomStream) error
	Recv() (*RoomStream, error)
	grpc.ClientStream
}

type cardBattleServiceCardBattleRoomStreamClient struct {
	grpc.ClientStream
}

func (x *cardBattleServiceCardBattleRoomStreamClient) Send(m *RoomStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleRoomStreamClient) Recv() (*RoomStream, error) {
	m := new(RoomStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cardBattleServiceClient) CardBattleLobbyStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleLobbyStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CardBattleService_serviceDesc.Streams[1], "/cardBattle.cardBattleService/cardBattleLobbyStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardBattleServiceCardBattleLobbyStreamClient{stream}
	return x, nil
}

type CardBattleService_CardBattleLobbyStreamClient interface {
	Send(*LobbyStream) error
	Recv() (*LobbyStream, error)
	grpc.ClientStream
}

type cardBattleServiceCardBattleLobbyStreamClient struct {
	grpc.ClientStream
}

func (x *cardBattleServiceCardBattleLobbyStreamClient) Send(m *LobbyStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleLobbyStreamClient) Recv() (*LobbyStream, error) {
	m := new(LobbyStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cardBattleServiceClient) CardBattleQueueStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleQueueStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CardBattleService_serviceDesc.Streams[2], "/cardBattle.cardBattleService/cardBattleQueueStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardBattleServiceCardBattleQueueStreamClient{stream}
	return x, nil
}

type CardBattleService_CardBattleQueueStreamClient interface {
	Send(*QueueStream) error
	Recv() (*QueueStream, error)
	grpc.ClientStream
}

type cardBattleServiceCardBattleQueueStreamClient struct {
	grpc.ClientStream
}

func (x *cardBattleServiceCardBattleQueueStreamClient) Send(m *QueueStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleQueueStreamClient) Recv() (*QueueStream, error) {
	m := new(QueueStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cardBattleServiceClient) CardBattleShopStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleShopStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CardBattleService_serviceDesc.Streams[3], "/cardBattle.cardBattleService/cardBattleShopStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardBattleServiceCardBattleShopStreamClient{stream}
	return x, nil
}

type CardBattleService_CardBattleShopStreamClient interface {
	Send(*ShopStream) error
	Recv() (*ShopStream, error)
	grpc.ClientStream
}

type cardBattleServiceCardBattleShopStreamClient struct {
	grpc.ClientStream
}

func (x *cardBattleServiceCardBattleShopStreamClient) Send(m *ShopStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleShopStreamClient) Recv() (*ShopStream, error) {
	m := new(ShopStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cardBattleServiceClient) CardBattleProfileStream(ctx context.Context, opts ...grpc.CallOption) (CardBattleService_CardBattleProfileStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CardBattleService_serviceDesc.Streams[4], "/cardBattle.cardBattleService/cardBattleProfileStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardBattleServiceCardBattleProfileStreamClient{stream}
	return x, nil
}

type CardBattleService_CardBattleProfileStreamClient interface {
	Send(*ProfileStream) error
	Recv() (*ProfileStream, error)
	grpc.ClientStream
}

type cardBattleServiceCardBattleProfileStreamClient struct {
	grpc.ClientStream
}

func (x *cardBattleServiceCardBattleProfileStreamClient) Send(m *ProfileStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleProfileStreamClient) Recv() (*ProfileStream, error) {
	m := new(ProfileStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CardBattleServiceServer is the server API for CardBattleService service.
type CardBattleServiceServer interface {
	CardBattleRegister(context.Context, *Player) (*Player, error)
	CardBattleRoomStream(CardBattleService_CardBattleRoomStreamServer) error
	CardBattleLobbyStream(CardBattleService_CardBattleLobbyStreamServer) error
	CardBattleQueueStream(CardBattleService_CardBattleQueueStreamServer) error
	CardBattleShopStream(CardBattleService_CardBattleShopStreamServer) error
	CardBattleProfileStream(CardBattleService_CardBattleProfileStreamServer) error
}

// UnimplementedCardBattleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCardBattleServiceServer struct {
}

func (*UnimplementedCardBattleServiceServer) CardBattleRegister(ctx context.Context, req *Player) (*Player, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardBattleRegister not implemented")
}
func (*UnimplementedCardBattleServiceServer) CardBattleRoomStream(srv CardBattleService_CardBattleRoomStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CardBattleRoomStream not implemented")
}
func (*UnimplementedCardBattleServiceServer) CardBattleLobbyStream(srv CardBattleService_CardBattleLobbyStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CardBattleLobbyStream not implemented")
}
func (*UnimplementedCardBattleServiceServer) CardBattleQueueStream(srv CardBattleService_CardBattleQueueStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CardBattleQueueStream not implemented")
}
func (*UnimplementedCardBattleServiceServer) CardBattleShopStream(srv CardBattleService_CardBattleShopStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CardBattleShopStream not implemented")
}
func (*UnimplementedCardBattleServiceServer) CardBattleProfileStream(srv CardBattleService_CardBattleProfileStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CardBattleProfileStream not implemented")
}

func RegisterCardBattleServiceServer(s *grpc.Server, srv CardBattleServiceServer) {
	s.RegisterService(&_CardBattleService_serviceDesc, srv)
}

func _CardBattleService_CardBattleRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Player)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardBattleServiceServer).CardBattleRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardBattle.cardBattleService/CardBattleRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardBattleServiceServer).CardBattleRegister(ctx, req.(*Player))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardBattleService_CardBattleRoomStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CardBattleServiceServer).CardBattleRoomStream(&cardBattleServiceCardBattleRoomStreamServer{stream})
}

type CardBattleService_CardBattleRoomStreamServer interface {
	Send(*RoomStream) error
	Recv() (*RoomStream, error)
	grpc.ServerStream
}

type cardBattleServiceCardBattleRoomStreamServer struct {
	grpc.ServerStream
}

func (x *cardBattleServiceCardBattleRoomStreamServer) Send(m *RoomStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleRoomStreamServer) Recv() (*RoomStream, error) {
	m := new(RoomStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CardBattleService_CardBattleLobbyStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CardBattleServiceServer).CardBattleLobbyStream(&cardBattleServiceCardBattleLobbyStreamServer{stream})
}

type CardBattleService_CardBattleLobbyStreamServer interface {
	Send(*LobbyStream) error
	Recv() (*LobbyStream, error)
	grpc.ServerStream
}

type cardBattleServiceCardBattleLobbyStreamServer struct {
	grpc.ServerStream
}

func (x *cardBattleServiceCardBattleLobbyStreamServer) Send(m *LobbyStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleLobbyStreamServer) Recv() (*LobbyStream, error) {
	m := new(LobbyStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CardBattleService_CardBattleQueueStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CardBattleServiceServer).CardBattleQueueStream(&cardBattleServiceCardBattleQueueStreamServer{stream})
}

type CardBattleService_CardBattleQueueStreamServer interface {
	Send(*QueueStream) error
	Recv() (*QueueStream, error)
	grpc.ServerStream
}

type cardBattleServiceCardBattleQueueStreamServer struct {
	grpc.ServerStream
}

func (x *cardBattleServiceCardBattleQueueStreamServer) Send(m *QueueStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleQueueStreamServer) Recv() (*QueueStream, error) {
	m := new(QueueStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CardBattleService_CardBattleShopStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CardBattleServiceServer).CardBattleShopStream(&cardBattleServiceCardBattleShopStreamServer{stream})
}

type CardBattleService_CardBattleShopStreamServer interface {
	Send(*ShopStream) error
	Recv() (*ShopStream, error)
	grpc.ServerStream
}

type cardBattleServiceCardBattleShopStreamServer struct {
	grpc.ServerStream
}

func (x *cardBattleServiceCardBattleShopStreamServer) Send(m *ShopStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleShopStreamServer) Recv() (*ShopStream, error) {
	m := new(ShopStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CardBattleService_CardBattleProfileStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CardBattleServiceServer).CardBattleProfileStream(&cardBattleServiceCardBattleProfileStreamServer{stream})
}

type CardBattleService_CardBattleProfileStreamServer interface {
	Send(*ProfileStream) error
	Recv() (*ProfileStream, error)
	grpc.ServerStream
}

type cardBattleServiceCardBattleProfileStreamServer struct {
	grpc.ServerStream
}

func (x *cardBattleServiceCardBattleProfileStreamServer) Send(m *ProfileStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *cardBattleServiceCardBattleProfileStreamServer) Recv() (*ProfileStream, error) {
	m := new(ProfileStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CardBattleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cardBattle.cardBattleService",
	HandlerType: (*CardBattleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "cardBattleRegister",
			Handler:    _CardBattleService_CardBattleRegister_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "cardBattleRoomStream",
			Handler:       _CardBattleService_CardBattleRoomStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "cardBattleLobbyStream",
			Handler:       _CardBattleService_CardBattleLobbyStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "cardBattleQueueStream",
			Handler:       _CardBattleService_CardBattleQueueStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "cardBattleShopStream",
			Handler:       _CardBattleService_CardBattleShopStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "cardBattleProfileStream",
			Handler:       _CardBattleService_CardBattleProfileStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "cardBattle.proto",
}
